
HTML5&CSS3知識確認レベル1
マークアップ言語とは... コンピュータによって処理される人工言語の種類の一つで、データ中に特定の記法を用いて何らかの情報を埋め込むためのものである。テキスト（文字）データ中に特定の記号で囲まれたタグ（tag）と呼ばれる表記を用いて構造や見栄えなどを記述するものがよく知られるが、バイナリデータ中に埋め込むものなど、様々な種類がある。

HTMLの役割... HTMLとはHyper Text Markup Language（ハイパーテキストマークアップランゲージ）の略で、ホームページなどを作成する際に用いられる。文書構造を定義するものであり、骨組みや構造となるマークアップ言語 です。コンピュータに画像やテキスト、ロゴなどを認識させるための役割を担う。例えば内をh1で大見出しを示し、h3で小見出し、pで段落であることを認識させる。
HTMLタグと呼ばれ、認識させたいテキストなどの前後をタグで囲むことで、コンピュータがその通りに表示する。タグは他にもbでテキストを太字にする、buttonでボタンを作成する、dirでリストを表示するなどさまざまである。

CSSの役割... CSSはCascading Style Sheets（カスケーディング・スタイル・シート）の略で ホームページなどの見た目・スタイルを定義するための言語 のことである。HTMLで画面に表示する文書構造などを定義し、CSSで表示方法や装飾などを定義する。まさにCSSはデザインであり、テキストに下線を引いたり、枠で囲ったり、文字の大きさを変えたりできる。
HTMLで作ったものを装飾して見やすくする役割を担う。よく例えられるのは、HTMLがすっぴんの似顔絵であれば、CSSは（その似顔絵の）化粧後の姿を作れる。HTML＋CSSを使うことで、そのWEBページが見やすくできる。

インライン要素、ブロックレベル要素の違い…インライン要素は、コンテンツの流れを分断せずに要素を定義するタグで囲まれた範囲だけを占有するものである。インライン要素は新しい行から始まらず、必要な幅のみを占有する。ブロックレベル要素は親要素（コンテナー）の領域全体を占有して「ブロック」を生成する。ブラウザーは一般的に、前後に新しい行を伴ってブロックレベルを要素を表示する。これはボックスを積み上げたように見えるから。ブロックレベル要素は常に新しい行から始まり、利用可能な全幅を取る（できる限り左右に伸びる）。
インライン要素とブロックレベル要素の間には、二つの大きな違いがある。
包含モデル
一般的にブロックレベル要素はインライン要素と他のブロックレベル要素を含むことができる。この固有の構造による区別は、ブロック要素がインライン要素よりも「大きな」構造を構築するという考えである。
既定の整形
既定では、ブロックレベル要素は新しい行から始まるが、インライン要素は行内のどこからでも始めることができる。
ブロックレベル要素とインライン要素という区分は、 HTML 4.01 までの仕様で使用されていた。 HTML5 ではこの二つの区分が、より複雑なコンテンツカテゴリの組み合わせに置き換えられた。「インライン」はおよそ記述コンテンツのカテゴリにに対応しているのに対し、「ブロックレベル」カテゴリは HTML5 のコンテンツカテゴリには直接対応しないが、「ブロックレベル」要素と「インライン」要素の組み合わせは HTML5 のフローコンテンツに対応します。他にも、対話型コンテンツなどの他のカテゴリも存在する。

idとclass...	•	id：ひとつのidはページ内で1度しか使えない。また、1要素に複数のidはつけられない。
* class：ひとつのページ内で同じclassをいくつでも使える。1要素に複数のidをつけて良い。

ひとつのidは同じページ内で二度使われてはいけないのです。
どうしてもidを複数つけたい場合は下記のようにidをひとつずつつけた要素を入れ子にする方法もあります。
しかし実際に複数つけることで期待される効果とは挙動が違います。
指定できることに制限ができるので、ひとつの要素に複数付与できるclassを使うべきです。

classなら、idではできない同じページなぢでの複数回使用、ひとつの要素への複数class付与も全く問題なく可能です。
たとえばWordPressの画像だとclassがこれでもというほど付与されています。

リセットCSS、ノーマライズCSS、サニタイズCSSの違い... リセットCSSは、デフォルトCSSをほぼ全てリセットするCSSです
上の画像がリセットCSSを読み込んだ状態のブラウザ表示になるのですが、h1〜h6のデフォルトCSSのフォントサイズがリセットされて全て同じになっています。
また、ulやolの文頭に何も表示されなくなっていますし、デフォルトCSSのマージンがリセットされて要素の間が詰まっているのが分かると思う。
初心者の方は、この状態の方がCSSが反映される様が分かりやすいので学習面ではオススメである。
しかし、実務ではCSSの記述量が増えてしまうため、あまり使わない。

ノーマライズCSSは、デフォルトCSSを活かしつつブラウザ間で誤差があるところだけ調整してくれる。
上の画像がノーマライズCSSを読み込んだ状態のブラウザ表示になるのですが、デフォルトCSSの状態とあまり変わっていないように見える。
しかし、Google Chrome、EDGE、Firefox、Safariなどいった様々なブラウザ表示の差異が調整されている。
これなら、ブラウザ表示の差異を気にすることなくコーディングを進められるので非常に便利である。

サニタイズCSSは、ノーマライズCSSと同じようにブラウザ間の誤差を調整してくれて、さらにlist-style:noneやbox-sizing: border-boxなどのよく使うCSSの指定もしてくれる。
上の画像がサニタイズCSSを読み込んだ状態のブラウザ表示になるが、ノーマライズCSSと同様にデフォルトCSSの状態とあまり変わっていないように見える。
しかし、Google Chrome、EDGE、Firefox、Safariなどいった様々なブラウザ表示の差異が調整され、さらにさらにlist-style:noneやbox-sizing: border-boxなどのよく使うCSSの指定もしておいてくれる気の利いたCSSである。

デベロッパーツールとは/デベロッパーツールの使い方... デベロッパーツールとは、Googleが提供しているブラウザ、Chromeに付属しているツールの一つである。
クローム以外のブラウザだと、Firebug（firefoxプラグイン）、Webインスペクタ（Safari）、開発者ツール（Internet Explorer）といったものがあり若干操作は違いますが、基本的に全て同じものである。

https://saruwakakun.com/html-css/basic/chrome-dev-tool